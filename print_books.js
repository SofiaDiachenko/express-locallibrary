const mongoose = require("mongoose");
const Book = require("./models/book");

// –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ª–æ–∫–∞–ª—å–Ω–æ—ó –±–∞–∑–∏ MongoDB
mongoose.connect("mongodb://localhost/local_library", {
  useNewUrlParser: true,
  useUnifiedTopology: true,
});

const db = mongoose.connection;
db.on("error", console.error.bind(console, "MongoDB connection error:"));

db.once("open", async () => {
  try {
    const books = await Book.find().populate("author").populate("genre").exec();
    if (books.length === 0) {
      console.log("üìö –£ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö –Ω–µ–º–∞—î –∫–Ω–∏–≥.");
    } else {
      books.forEach((book) => {
        console.log(`üìñ –ù–∞–∑–≤–∞: ${book.title}`);
        console.log(`üë§ –ê–≤—Ç–æ—Ä: ${book.author?.name || "–Ω–µ–º–∞—î"}`);
        console.log(`üè∑Ô∏è –ñ–∞–Ω—Ä–∏: ${book.genre.map((g) => g.name).join(", ") || "–Ω–µ–º–∞—î"}`);
        console.log("------");
      });
    }
  } catch (err) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Ç—ñ –∫–Ω–∏–≥:", err);
  } finally {
    mongoose.connection.close();
  }
});
